The following constraints are commonly used in SQL:

NOT NULL - Ensures that a column cannot have a NULL value
UNIQUE - Ensures that all values in a column are different
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
FOREIGN KEY - Prevents actions that would destroy links between tables
CHECK - Ensures that the values in a column satisfies a specific condition
DEFAULT - Sets a default value for a column if no value is specified
CREATE INDEX - Used to create and retrieve data from the database very quickly

 alter table emp add constraint pk_ecode primary key(ecode);
   // pk_ecode is the name of our constraint
 alter table emp alter column ename int;
  // change the datatype of column

Table Level Constarint - 
create table dept( did int, dname varchar(20), constarint pk_did primary key (did));

check constarint - check the value of cloumn basend on condition it will allow values
create table dept( did int CHECK(did<=100), dname varchar(20), constarint pk_did primary key (did)); // it will not allow value greater than 100

delete from employee; // delete all data from table

like % = zero or any character
like _ = single character ( at particular place as well)
select * from employee where ename like '_a%';
select * from employee where ename not like '%';

FUNCTION - upper(column name) -> for uppercase
lower(column name) -> for lowercase

select ename,upper(ename) as 'up name' from employee;

select * from employee where salary not between 2000 and 5000;

begin transaction 
delete from employee
rollback
//Roll back all the deleted data

rollback -> undo changes(uncommited)
commit to save changes permanent. commit can not be rolledback;
begin transaction
delete from employee
commit

DROP can not be rolled back, you can not truncate specific record.

GROUP FUNCTION -> work on multi values but you will get single output

we can not use aggregation with where like max min  with where clause

selectcid,max(salary) from employee group by cid having max(Salary)>5000;

TOP Command => select TOP 2 * from employee;

INTO -> create new duplicate table with existing table;
select * into employeedup from employee;
select  eid,cid,salary into employeedup2 from employee;

select into will create new table but insert into will not create new table;

--------------------JOINS--------------------

Inner join -> self, equi, non-equi
Outer join -> left, right, full, cartisian join(cross join)

-----------------SUB-QUERIES---------------------

single row subquery = single line 
multiple row subquery =
we can use maximum 32 nested sub queries;

------------DATE FUNCTION----------------------

DATEADD()
select getDate();
select dateadd(day, 1 getDate());
select dateadd(year, 1,getDate());
select dateadd(month, 2,getDate());

select datediff(year,'1977/10/12', getDate())

select name as  "Male People", datediff(year,date_of_birth,"2023-06-01") as "Age" From PEOPLE where sex="male" order by name;

-------------------Stored Procedures(SP)--------------

1. user defined SP
2. System defined SP

create procedure ShowEMployee
as
begin
print 'hello'
end
execute ShowEmployee or exec ShowEmployee
Alter procedure ShowEMployee
as
begin
declare @n1 int =20;
print 'hello' + cast(@n1 as varchar)
print @n1 * @n1 // square of the number
end

procedure name is not case sensitive;

WITH Parameter ->

Create procedure GetEmployeeById @eid int
as
begin
select * from employee where eid=@eid;
end

execute GetEmployeeById 4

OUTPUT Parameter ->
output is for getting return value from procedures.

create Procedure TOtalEMployee
@tot int output, @m int output, @min int outpuit
as
begin
select @tot=count(eid), @m=max(Salary), @min=min(salary) from employee;
end
declare @t int, @mn int, @mnn int
exec totalEmployee @t output, @mn output, @mnn output
select @t,@mn,@mnn

----------------------Exception--------------------------

create procedure normal
as 
begin
declare @n int, @res int;
begin try
set @n=0;
set @res=1200/@n;
print @res
end try
begin catch
print 'error in code'
end catch
print 'after catch'
end

exec normal

sp_helptext normal //it will return database object we can view our stored procedure

----------FUNCTIONS-------------------
WE cant use Insert, Update, Delete in database table

(A). Scalar functions - return single value as result

 2 types of function 1. System defined 2. User defined

if we want to return multiple values then set return type as table for multiple return value

(B). Table valued function => it will return table

alter function func4()
returns table
as
return select * from employee

select * from dbo.func4() // to execute this function

1. DML (Data Manipulation Language):

Purpose: DML is used for manipulating data stored in the database. It involves operations like querying data, inserting new records, updating existing records, and deleting records.
Common Commands: SELECT, INSERT, UPDATE, DELETE
  
2. DDL (Data Definition Language):
Purpose: DDL is used for defining and managing the structure of the database, including tables, indexes, and constraints. DDL statements are responsible for creating, altering, and deleting database objects.
Common Commands: CREATE, ALTER, DROP
  
3. DQL (Data Query Language):
Purpose: DQL is a subset of SQL that specifically deals with the retrieval of information from the database. It is used for querying the database to extract specific information based on certain criteria.
Common Commands: SELECT
  
4. DCL (Data Control Language):
Purpose: DCL is concerned with the permissions and access control of the database. It includes commands that control who can access the database, what operations they can perform, and what data they can see.
Common Commands: GRANT, REVOKE
  
5. TCL (Transaction Control Language):
Purpose: TCL is used to manage transactions within a database. Transactions are sequences of one or more SQL statements that are treated as a single unit of work. TCL statements control the beginning and end of transactions.
Common Commands: COMMIT, ROLLBACK, SAVEPOINT

Seven Types of database - 

Types of database  1. Object oriented database (PostgreSQL) 2. Relational Database (MySql) 3. Distributed database ( cassandra) 4. Hierarchical Database (IBM(Information Management System Known as IMS))

Horizontal Scaling - adding more hardware
vertical Scaling - 

DBMS is a software system for storing and retrieving user's data  while considering appropriate security measures.

Characteristics of dbms - Real ?World Entity, Relational Database, Structured Query Language,  Isolation of data and application, Acid Properties, Multiuser and concurrent access, Transactional processing, less redundancy and consistency, data security and integrity

database is a  collection of database object/ collection of files / collection of tables.

schema defines a structure of a database, or (collection of database object for particular user.)
refrential integrity constraint on table and column - ?

SQL SERVER - sssms(it is a tool) which manipulate and access database

ssrs -> SQL server reporting services, ssis -> sql server integration services. ssas -> sql server analysis services.

{learn all types of keys with  there attributes like primary , candidate, foreign, unique (index, views , triggers, stored procedures }

Learn merge command ?

DDL -> CREATE ,ALTER,TRUNCATE,DROP,
DML ->INSERT, UPDATE, DELETE, 
DCL -> GRANT, REVOKE, 
DQL -> TO perform queries on data
TCL -> rollback, commit

sp_help databaseName.Tablename; -> show structure of a table

if you have multiple clauses then place order by clause at last otherwise it will throw error.

{MERGE, Transaction, function}

---------------------C# Pointer-------------------
type* identifier;
char* str_name; // Memory reference
int* user_id;

Access Modifiers -> public, protected, private , internal

In C#, the goto statement transfers control to some other part of the program
using System; {use with goto => repeat, END, finish

namespace CSharpGoto {

  class Program {
    public static void Main(string[] args) {
      
      // label
      repeat: 
        Console.WriteLine("Enter a number less than 10");
        int num = Convert.ToInt32(Console.ReadLine());  

        if(num >= 10) {
          // transfers control to repeat
          goto repeat;
        }

        Console.WriteLine(num + " is less than 10");
        Console.ReadLine();
    }
  }
}

namespace is a package similar in java;
Heap and Stack Memory -> String goes in heap, memory allocation is dynamic, it stored indirectly.
	
It is a special thread created by .NET runtime to monitor allocations of heap space.

It only collects heap memory since objects are only created in heap

Console.Read() reads one character at a time, which might not be handled well by the online compilerâ€™s input buffer
string variable is reference type it will store in  heap area 
two types -  value type is int a = 190;
		Reference type string s ="Gagan";

Write all the string methods;\
str.PadRight(20, '*'); this will fill the blank space with * if your string is not of length 20; in right side; similary left pad as well;

string new_string = string.Join(" ",input);

object[] array = {"Hello", "Gagan", 12345, 786}; 
  
        // Using Join method 
        // Here separator is ', '( comma ) 
        string s1 = string.Join(", ", array); 

----------------------Arrays--------------

Jagged Array ->  Array inside an array.
Array.GetLength(); //  explore this 

Multi Dimensional Array ->

int[,] md = new int[,] {{10,20}, {1,2}, {3,5}};
for(int r =0;i<md.GetLength(0);r++){
for(int k =0;i<md.GetLength(1);k++){
console.writeline(md[r][k]);
}
}

{ *WE DONT GET QUESTION ON DIMENSIONAL ARRAY}

jagged array example=>
int [][] ja = new int[3][];
ja[0] = new int[]{1,2,3,4};
ja[1] = new int[]{1,2,3,4};
ja[1] = new int[]{1,2,3,4};

----------------------STRING--------------------------
String is  immutable same as java.
we have to use Escape Sequence character for printing (") or we can use (@) before the string for ex - 

String test = " i am \" Gagan \" Y.";
string new_Str  = test+"new data"; // update in string pool with old object reference.

 If new keyword is used to create string then object is not only created in String Constant Pool but also in Heap Area.

If we create strings like String S="WONDERFUL" , then SCP checks whether the string literal is already present in SCP or not.
If it is not present the only 1 object is created inside String Constant Pool(SCP)

If same literal object is present inside string constant pool (SCP)
then instead of creating new object with the same literal, it points to the existing object.

String Builder ->
 StringBuilder text = new StringBuilder(50); // fixed size or capacity
---------------------------------------------------------------
An object is a software bundle of related variable and Methods;
A class is user defined datatype;

STRUCT => user defined datatype; read only data, inherit not allowed;

when to use struct ? // small functionality, limited and no inheritance

	Access specifiers -> internal, public, private, protected, protected internal, private protected.

STATIC => Static variables are inherited as long as they're are not hidden by another static variable with the same identifier.1

-------------------------------------------------------------
REGEX =>  in c# we have to make object of regex class and then pass out pattern in default constructor ;
   Regex rg =  new Regex(pattern);

and use system classes for matching regex like
MatchCollection matches  = Regex(pattern);

using System.Linq;
TextInfo t = new CultureCollection.CurrentCulture.TextInfo;
t.ToTitleCase();

a method which has body and cam be overridden in child class is a virtual method;

