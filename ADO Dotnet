			ADO DOTNET

ActiveXData Objects - ADO
it is one of microsofts data access technologies.
it allow us to connect to databases.  it has predefined classes and methods to retrieve and manipulate data
it provides a bridge between the front end controls and back end database;

1. Data provider similar java connection class, prepared statement
we have dataReader class for connected model

2. Dataset
 for disconnected model
using System.Data.SqlClient; using System.Data.MySqlClient;
Connection class => 

Command class =>
steps => 1. 
SqlConnection con = new SqlConnection();
con.ConnectionString = "server=.;database=appdb1;trusted_connection=true";
con.Open();
con.Close(); // close at the end 

2. SqlCommand cmd = new SqlCommand();
cmd.Connection = con;
cmd.CommandText = "select * from emp";
SqlDataReader rd = cmd.ExecuteReader(); // return data in sqlDataReader

3. rd.Read(); // cursor set to one record
Console.WriteLine("name - "+rd.GetValue(0)); // or rd.GetInt32(1);
Console.WriteLine("Ecode : "+rd.GetValue(1));
Console.WriteLine("Salary: "+rd.GetValue(2));

while(rd.Read()){
// rd.Read();
Console.WriteLine("name - "+rd.GetValue(0)); // or rd.GetInt32(1);
Console.WriteLine("Ecode : "+rd.GetValue(1));
Console.WriteLine("Salary: "+rd.GetValue(2));
}

cmd.CommandText = "Insert into emp values('gagan', 27, 999999)";
cmd.ExecuteNonQuery(); // for insert query

Dynamic values in insert =
cmd.CommandText = "insert into emp values(@p1,@p2,@p3)";
cmd.Parameteers.AddWithValue("@p1", name); 
cmd.Parameteers.AddWithValue("@p2", code);
cmd.Parameteers.AddWithValue("@p3", sal);// take user input for name code sal using console writeline

if(rd.HasRows == false){
return;}else{records print here}

UserId=sa;password=root;server=;Database=db1;trusted_connection=false"

		Connected Architecture 
connection always remain open;

Disconnected Arch. => connection should not always remain open
Data Adapter class => acts as an interface between application between application and database. it provides data to the dataset. full time connection is not required.

disconnected steps = 1. Connection
			2. Command
			  3. Data Adapter(Interface between database and dataset)
			     4. DataSet (for multiple data)
				5. DataTable(for one table)
DataAdapter Method => Fill() => To load data from data source into dataset
Update()=> To transfer data from a dataset to a data source.
dataset => collections of data tables

string cs ="";
using(SqlConnection conn = new SqlConnnection(cs)){
conn.Open();
SqlCommand cmd = new SqlCommand("Select * from emp",conn);
DataAdapter da = new DataAdapter();
da.SelectCommand = cmd;
DataSet bottle = new DataSet();
da.Fill(bottle, "emp");
// Conn.Close(); // we dpont need to use this here
foreach(DataRow r in bottle.Tables["emp"].Rows){
console.wl(r[0]); //  print names
}

---------------------------------------------------
// You are using Java
public static void ShowAll(){
    using(SqlConnection conn  = new SqlConnection(cs))
    {
        conn.Open();
        SqlCommand cmd =  new SqlCommand("Select * from emp",conn);
        SqlDataAdapter da = new SqlDataAdapter();
        da.SelectCommand =  cmd;
        DataSet bottle = new DataSet();
        da.Fill(bottle,"emp");
        
        Console.WriteLine($"Name \t ecode \t salary");
        foreach(DataRow r in bottle.Tables["emp"].Rows){
            Console.WriteLine($"{r[0]} \t {r[1]} \t {r[2]}");
        }
        
        
    }
}

